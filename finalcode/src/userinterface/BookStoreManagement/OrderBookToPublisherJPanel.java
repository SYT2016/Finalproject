/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.BookStoreManagement;

import Business.Enterprise.Enterprise;
import Business.Enterprise.PublisherEnterprise;
import Business.Network.Network;
import Business.OrderSystem.Book;
import Business.OrderSystem.Order;
import Business.OrderSystem.OrderItem;
import Business.Organization.Deli_ManagementOrganization;
import Business.Organization.Organization;
import Business.Organization.PB_ManagementOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import static userinterface.MainJFrame.dB4OUtil;
import static userinterface.MainJFrame.system;

/**
 *
 * @author wangcong
 */
public class OrderBookToPublisherJPanel extends javax.swing.JPanel {
    private JPanel container;
    private UserAccount bookstoreManager;
    private Book selectedBook;
    private ArrayList<OrderItem> orderItemList;
    /**
     * Creates new form OrderBookToPublisherJPanel
     */
    public OrderBookToPublisherJPanel(JPanel container,UserAccount bookstoreManager,Book selectedBook) {
        this.container = container;
        this.bookstoreManager = bookstoreManager;
        this.selectedBook = selectedBook;
        initComponents();
        this.setBackground(new Color(253,251,239));
        populateTxt();
    }
    
    public void populateTxt(){
           txtBookName.setText(selectedBook.getName());
           txtPrice.setText(String.valueOf(selectedBook.getPrice()));
        
           txtPress.setText(selectedBook.getEnterprise().getEnterpriseName());
           txtWanttedQuantity.setText("");
        }
public static boolean isNumeric(String str){

        String reg = "^[0-9]+(.[0-9]+)?$";

        return str.matches(reg);

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnOrder = new javax.swing.JButton();
        txtBookName = new javax.swing.JTextField();
        txtPress = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtWanttedQuantity = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtComment = new javax.swing.JEditorPane();

        jPanel1.setBackground(new java.awt.Color(253, 251, 239));
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 800));

        jLabel1.setFont(new java.awt.Font("Tekton Pro Ext", 3, 48)); // NOI18N
        jLabel1.setText("Order BOOK to Publisher");

        btnBack.setFont(new java.awt.Font("Tekton Pro Ext", 1, 30)); // NOI18N
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel2.setText("Book Name:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel3.setText("Book Price:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel4.setText("Book Publisher:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel6.setText("Book Wantted Quality:");

        btnOrder.setFont(new java.awt.Font("Tekton Pro Ext", 1, 30)); // NOI18N
        btnOrder.setText("Order!!!");
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });

        txtBookName.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        txtBookName.setEnabled(false);

        txtPress.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        txtPress.setEnabled(false);

        txtPrice.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        txtPrice.setEnabled(false);

        txtWanttedQuantity.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel7.setText("Extra Information:");

        txtComment.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jScrollPane1.setViewportView(txtComment);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOrder)
                .addGap(44, 44, 44))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(2, 2, 2))
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel6))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtBookName)
                    .addComponent(txtPrice)
                    .addComponent(txtPress)
                    .addComponent(txtWanttedQuantity)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(175, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(144, 144, 144))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel1)
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtBookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtWanttedQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOrder)
                    .addComponent(btnBack))
                .addGap(304, 304, 304))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 950, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        container.remove(this);
        CardLayout layout=(CardLayout)container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        
  String str=txtWanttedQuantity.getText();
        if(!isNumeric(str)){
              JOptionPane.showMessageDialog(null, "Please input a valid number!", "Warning", JOptionPane.WARNING_MESSAGE);
          
        }
        else{
        

        int wanttedQuantity = Integer.parseInt(txtWanttedQuantity.getText());
        double selectedBookPrice = Double.parseDouble(txtPrice.getText());
        double totalPrice = wanttedQuantity * selectedBookPrice;
        
        OrderItem orderItem = new OrderItem(selectedBook, wanttedQuantity, selectedBookPrice);
        orderItemList = new ArrayList<>();
        orderItemList.add(orderItem);
        
        /*set order*/
        Order order = new Order();
        order.setOrderItems(new ArrayList<>(orderItemList));
        order.setStatus("Waiting Publisher Process");
        order.setUserAccount(bookstoreManager);
        order.setTotalPrice(String.valueOf(totalPrice));
        order.setComments(txtComment.getText());
        bookstoreManager.getUserorderlist().add(order);
        
        /*find the publisher*/
        PublisherEnterprise Publisher = null;

        for(Enterprise e:bookstoreManager.getEmployee().getEnterprise().getNetwork().getEnterpriseDirectory().getEnterpriseList()){
              
            if(e.getEnterpriseType().equals("Type-Publisher") && e.getEnterpriseName().equals(txtPress.getText())){

                Publisher = (PublisherEnterprise)e;
                System.out.println(e.getOrganizationDirectory().getOrganizationList().size());
                /*find the publisher organization*/
                System.out.println(Publisher.getEnterpriseName());
                PB_ManagementOrganization PublisherOrg = null;
                ArrayList<Organization> publisherList =  Publisher.getOrganizationDirectory().getOrganizationList();
                
                for(Organization org : publisherList){
                   if(org.getOrgtypename().equals("PB_ManagementOrganization")){
                        PublisherOrg = (PB_ManagementOrganization)org;
                         /*set workRequest*/
                        WorkRequest workRequest = new WorkRequest();
                        workRequest.setOrder(order);
                        workRequest.setSenderEnterprise(bookstoreManager.getEmployee().getEnterprise());
                        workRequest.setReceiverEnterprise(Publisher);
                        workRequest.setStatus("Uncompleted");
                        workRequest.setMessage(txtComment.getText());
                        workRequest.setRequestDate(new Date());
                        workRequest.getOrder().setStatus("Waiting Publisher Process");
                        PublisherOrg.getWorkQueue().addNewRequest(workRequest);
                        bookstoreManager.getEmployee().getOrganization().getWorkQueue().addNewBSToPublisherRequest(workRequest);
                        System.out.println("给 "+Publisher.getEnterpriseName()+"的部门"+PublisherOrg.getOrgtypename()+"添加了request");
                        JOptionPane.showMessageDialog(null, "The request have already send the order to Publiser "+e.getEnterpriseName()+" "+org.getOrgtypename());
                         
                        dB4OUtil.storeSystem(system);
                        txtWanttedQuantity.setEnabled(false);
                        txtComment.setEnabled(false);
                        btnOrder.setEnabled(false);
                        break;
                    }
                }
                if(PublisherOrg==null){
                    JOptionPane.showMessageDialog(null, "没有这个org");
                }
            }
            
        } 
        if(Publisher==null){
            JOptionPane.showMessageDialog(null, "The Publisher does not exist", "Error", JOptionPane.WARNING_MESSAGE);
        }
        }
    }//GEN-LAST:event_btnOrderActionPerformed
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBookName;
    private javax.swing.JEditorPane txtComment;
    private javax.swing.JTextField txtPress;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtWanttedQuantity;
    // End of variables declaration//GEN-END:variables
}
